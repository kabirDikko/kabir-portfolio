---
import { getCollection, getEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { Image } from "astro:assets";
import { Github, ExternalLink } from "lucide-astro";

export async function getStaticPaths() {
  const projectEntries = await getCollection("projects");
  return projectEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout title={`${entry.data.title} - Project | Kabir Dikko`}>
  <div class="page-container max-w-4xl mx-auto">
    <div class="mb-8">
      <div class="flex items-center gap-2 mb-6 text-text-body text-sm">
        <a href="/projects" class="hover:text-primary transition-colors">
          &larr; Back to Projects
        </a>
      </div>

      <div>
        {
          entry.data.heroImage && (
            <div class="relative w-full h-[300px] md:h-[400px] mb-8 rounded-xl overflow-hidden">
              <img
                src={entry.data.heroImage}
                alt={entry.data.title}
                class="w-full h-full object-cover"
              />
            </div>
          )
        }

        <div class="mb-8">
          <h1 class="text-3xl md:text-4xl font-bold mb-4">
            {entry.data.title}
          </h1>
          <div class="flex flex-wrap gap-2 mb-4">
            {
              entry.data.tags.map((tag) => (
                <span class="px-3 py-1 bg-accent text-accent-foreground text-xs font-medium rounded-full">
                  {tag}
                </span>
              ))
            }
          </div>

          <div class="flex flex-wrap gap-4 mb-6">
            {
              entry.data.repoUrl && (
                <a
                  href={entry.data.repoUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="flex items-center gap-2 text-sm text-primary hover:underline"
                >
                  <Github size={16} class="w-4 h-4" />
                  Source Code
                </a>
              )
            }
            {
              entry.data.liveUrl && (
                <a
                  href={entry.data.liveUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="flex items-center gap-2 text-sm text-primary hover:underline"
                >
                  <ExternalLink size={16} class="w-4 h-4" />
                  Live Demo
                </a>
              )
            }
          </div>

          <p class="text-text-body text-lg mb-8">{entry.data.description}</p>
        </div>

        <div class="prose prose-lg dark:prose-invert max-w-none">
          <Content />
        </div>
      </div>
    </div>
  </div>
</Layout>

<style>
  /* Custom styles for markdown content */
  :global(.prose h2) {
    @apply mt-12 mb-6 text-2xl font-bold;
  }

  :global(.prose h3) {
    @apply mt-8 mb-4 text-xl font-semibold;
  }

  :global(.prose p) {
    @apply mb-6 text-text-body;
  }

  :global(.prose ul) {
    @apply my-6 list-disc pl-6;
  }

  :global(.prose li) {
    @apply mb-2 text-text-body;
  }

  :global(.prose strong) {
    @apply text-foreground font-semibold;
  }
</style>
