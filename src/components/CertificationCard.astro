---
interface Props {
  title: string;
  issuer: string;
  issueDate: string;
  credentialUrl: string;
  icon?: any;
}

import { Calendar, ExternalLink } from "lucide-astro";

const { title, issuer, issueDate, credentialUrl, icon: Icon } = Astro.props;

// Format the issue date to be more readable
const formatDate = (dateString: string) => {
  if (!dateString) return "";
  try {
    const date = new Date(dateString);
    return new Intl.DateTimeFormat("en-US", {
      month: "short",
      year: "numeric",
    }).format(date);
  } catch (e) {
    return dateString; // If parsing fails, return the original string
  }
};

const formattedDate = formatDate(issueDate);
---

<div
  class="glass-card group overflow-hidden transition-all duration-300 hover:border-primary/50 flex flex-col h-full"
>
  <div class="p-4 md:p-6 flex-1 flex flex-col">
    <div class="flex items-start gap-3 mb-2">
      <div
        class="certification-logo w-8 h-8 md:w-10 md:h-10 rounded-lg flex items-center justify-center bg-primary/10 border border-primary/20 p-1.5"
      >
        {Icon && <Icon size={18} class="text-primary" />}
      </div>
      <div class="flex-1 min-w-0">
        <h3
          class="text-base md:text-xl font-semibold mb-1 text-foreground group-hover:text-primary transition-colors duration-200 truncate"
        >
          {title}
        </h3>
        <p class="text-sm md:text-base text-muted-foreground mb-1 md:mb-2 truncate">{issuer}</p>
        <div class="flex items-center text-xs md:text-sm text-muted-foreground">
          <Calendar size={12} class="w-3 h-3 md:w-3.5 md:h-3.5 mr-1 opacity-70" />
          Issued {formattedDate}
        </div>
      </div>
    </div>
    <a
      href={credentialUrl}
      target="_blank"
      rel="noopener noreferrer"
      class="flex items-center gap-1 text-xs md:text-sm text-primary hover:underline mt-auto self-start py-2"
    >
      <ExternalLink size={12} class="w-3 h-3 md:w-3.5 md:h-3.5" />
      <span class="mobile-tap-target">View Credential</span>
    </a>
  </div>
</div>

<style>
  .glass-card {
    border-radius: 12px;
    position: relative;
    overflow: hidden;
    height: 100%;
    min-height: 140px;
  }
  
  @media (min-width: 768px) {
    .glass-card {
      min-height: 180px;
    }
  }
  
  .glass-card:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 3px;
    background: linear-gradient(90deg, var(--primary-color), transparent);
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .glass-card:hover:after {
    opacity: 1;
  }
  
  /* Make tap targets larger on mobile */
  @media (max-width: 768px) {
    a {
      padding: 8px 0;
      display: inline-block;
      min-height: 32px;
    }
    
    .mobile-tap-target {
      position: relative;
      padding: 5px 0;
    }
  }
</style>
