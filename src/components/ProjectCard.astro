---
interface Props {
  title: string;
  description: string;
  imageUrl?: string;
  tags: string[];
  repoUrl?: string;
  liveUrl?: string;
}

import { Github, ExternalLink } from "lucide-astro";

const { title, description, imageUrl, tags, repoUrl, liveUrl } = Astro.props;
---

<div
  class="glass-card project-card group overflow-hidden transition-all duration-300 hover:border-primary/50 flex flex-col"
>
  {
    imageUrl && (
      <div class="aspect-video overflow-hidden relative">
        <div class="absolute inset-0 bg-primary/10 z-10 opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
        <img
          src={imageUrl}
          alt={title}
          class="object-cover w-full h-full group-hover:scale-105 transition-transform duration-300"
        />
        <div class="absolute top-2 right-2 w-8 h-8 bg-black/50 rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity z-20 project-view-indicator">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-primary">
            <path d="M18 13v6a2 2 0 01-2 2H5a2 2 0 01-2-2V8a2 2 0 012-2h6"></path>
            <path d="M15 3h6v6"></path>
            <path d="M10 14L21 3"></path>
          </svg>
        </div>
      </div>
    )
  }
  <div class="p-6 flex-1 flex flex-col relative z-1">
    <h3
      class="text-xl font-semibold mb-2 text-foreground group-hover:text-primary transition-colors duration-200"
    >
      {title}
    </h3>
    <p class="text-muted-foreground mb-4 flex-1 description">
      {description}
    </p>
    <div class="mb-4 flex flex-wrap gap-2">
      {
        tags.map((tag) => (
          <span class="px-2 py-1 bg-accent/70 backdrop-blur-sm text-xs font-medium text-accent-foreground rounded">
            {tag}
          </span>
        ))
      }
    </div>
    <div class="flex gap-3 mt-auto">
      {
        repoUrl && (
          <a
            href={repoUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="flex items-center gap-1 text-sm text-primary hover:underline touch-action-manipulation py-2 px-3 min-h-[44px]"
          >
            <Github size={16} class="w-4 h-4 mr-1" />
            <span>Source</span>
          </a>
        )
      }
      {
        liveUrl && (
          <a
            href={liveUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="flex items-center gap-1 text-sm text-primary hover:underline touch-action-manipulation py-2 px-3 min-h-[44px]"
          >
            <ExternalLink size={16} class="w-4 h-4 mr-1" />
            <span>Demo</span>
          </a>
        )
      }
    </div>
    
    <!-- Indicate clickability with view project arrow indicator (always shown on mobile) -->
    <div class="view-project-indicator absolute bottom-3 right-3 flex items-center gap-1 text-xs text-primary/70 opacity-0 group-hover:opacity-100 transition-opacity">
      <span>View Project</span>
      <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="m9 18 6-6-6-6"></path>
      </svg>
    </div>
    
    <slot />
  </div>
</div>

<style>
  /* Ensure project cards are properly tappable on mobile */
  @media (max-width: 768px) {
    .project-card a {
      margin-right: 1rem;
      background-color: rgba(0, 0, 0, 0.3);
      border-radius: 4px;
      border: 1px solid hsla(var(--primary), 0.2);
    }
    
    /* Always show the view project indicator on mobile */
    .view-project-indicator {
      opacity: 0.7 !important;
    }
    
    /* Always show the project view icon on mobile */
    .project-view-indicator {
      opacity: 0.7 !important;
    }
  }
  
  /* Electric highlight effect when hovering */
  .project-card:hover {
    box-shadow: 0 0 20px hsla(var(--primary), 0.4);
  }
</style>
